---
layout:     post
title:      "转：For循环中分号隔开的3部分的执行顺序探讨"
date:       2016-02-18
author:     "赵祎鑫"
header-img: "img/post-bg-js-version.jpg"
tags:
    - 技术
---

> for循环是我们编写javascript代码时经常用到的一种循环命令，之前一直对for循环中三个表达式的执行顺序不太明白，今天在网上找到这样一篇文章，觉得讲得很清楚，转过来，供大家借鉴~

for循环命令一般为：

```
for(initialize; test; increment)
  statement

// 或者

for(initialize; test; increment) {
  statement
}
```

for语句后面的括号里面，有三个表达式。

 * 初始化表达式（initialize）：确定循环的初始值，只在循环开始时执行一次。
 * 测试表达式（test）：检查循环条件，只要为真就进行后续操作。
 * 递增表达式（increment）：完成后续操作，然后返回上一步，再一次检查循环条件。
 
有这样一个例子：

```
var i = 0; 
function a(){ 
for(i=0;i<20;i++){ 
} 
} 
function b(){ 
for(i=0;i<3;i++){ 
a(); 
} 
return i; 
} 
var Result = b(); 
```

这段程序的运行结果是Result = 21。

从这段程序中我们可以看出，i在a函数返回的时候值是20这是没有问题的。 

而在b函数返回的时候，i的值是20还是21就值得讨论了。 

问题的本质即：先进行了判断i<3，还是先进行了i++，再判断是否i<3. 

根据执行的结果可以看出，是先执行了i++的。 

```
function a(){ 
for(i=0;i<20;i++){ 
// 没有 var i 
//这里的i就是全局变量所有人可以访问 
} 
} 
function b(){ 
for(i=0;i<3;i++){ 
//alert(i);//同理这里的i也是全局变量，返回0且只有一次返回 
a();//这个函数返回是i=20 
//当i=20 经过 i++后 i=21 那么就不符合i<3的条件，直接退出。所以return i=21 这很正常！ 
} 
return i; 
} 
var Result = b(); 
```

在此我们补完for循环的执行顺序： 

以下面程序为例

```
for(int i=0;i<10;i++) 
{ 
} 
```

首先执行i=0;i<10; 然后执行第一轮循环体。

然后执行：i++,i<10; 然后执行第二轮循环体。

直到最后一次 i++后 i >=10,此时循环结束。 

即：

语句 1 在循环（代码块）开始前执行。

语句 2 定义运行循环（代码块）的条件。 

语句 3 在循环（代码块）已被执行之后执行。